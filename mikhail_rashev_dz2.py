#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Apr 19 21:11:05 2022

@author: rashev
"""
# Михаил Рашев. Домашнее Задание 2.
# Некоторые встроенные типы и операции с ними


# dz1
def val_type(val):
    """
    1. Выяснить тип результата выражений:

    15 * 3
    15 / 3
    15 // 2
    15 ** 2
    """
    print(f"у числа - {val} тип {type(val)}")


val1 = 15 * 3  # 1
val2 = 15 / 3  # 2
val3 = 15 / 4  # 3
val4 = 15 ** 2  # 4

print(" ДЗ 1\n")
val_type(val1)
val_type(val2)
val_type(val3)
val_type(val4)


# dz2
def work_around(lst):
    """
    2.1. Дан список:
    ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5',
    'градусов']
    Необходимо его обработать — обособить каждое целое число
    (вещественные не трогаем) кавычками
    (добавить кавычку до и кавычку после элемента списка, являющегося числом) и
    дополнить нулём до двух целочисленных разрядов:
    """
    new_lst = []
    for val in lst:
        if val.isdigit():
            new_lst.append("\"")
            new_val = val.zfill(2)
            new_lst.append(new_val)
            new_lst.append("\"")
        elif val.startswith("+"):
            new_lst.append("\"")
            new_val = val[0] + "0" + val[1]
            new_lst.append(new_val)
            new_lst.append("\"")
        else:
            new_lst.append(val)

    print("\n ДЗ 2.1")
    print("lst = ", lst)
    print("new_lst = ", new_lst, "\n")

    """
    2.2
    ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура',
    'воздуха', 'была', '"', '+05', '"', 'градусов']
    Сформировать из обработанного списка строку:
    """
    lst2 = " ".join(lst)
    print(" ДЗ 2.2")
    print(f"строка после объединения массива lst:\n{lst2}\n")
    """
    2.3
    в "05" часов "17" минут температура воздуха была "+05" градусов
    Подумать, какое условие записать, чтобы выявить числа среди элементов
    списка? Как модифицировать это условие для чисел со знаком?
    """
    print(" ДЗ 2.3")
    lst3 = ['в', '05', 'часов', '17', 'минут', 'температура', 'воздуха',
            'была', '+05', 'градусов']
    for val in lst3:
        if (val.isdigit is True):
            print(f"{val} это число")
        else:
            n = 0
            for letter in val:
                if letter in ['+', '-', '1', '2', '3', '4', '5', '6', '7',
                              '8', '9', '0']:
                    n = n + 1
            if n == len(val):
                print(f"{val} это число")


"""
Примечание: если обособление чисел кавычками не будет получаться -
можете вернуться к его реализации позже.
Главное: дополнить числа до двух разрядов нулём!
"""
lst = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была',
       '+5', 'градусов']

work_around(lst)
# ДЗ 3.
"""
3. * (вместо задачи 2) Решить задачу 2 не создавая новый список
(как говорят, in place).
Эта задача намного серьёзнее, чем может сначала показаться.
"""

lst = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была',
       '+5', 'градусов']
print("\n ДЗ 3. Решить задачу 2 не создавая новый список")
print("lst = ", lst)
n = len(lst)
j = 0
i = 0
while j < n:
    if i > n*3:
        break

    val = lst[i]
    if val.isdigit():
        lst.insert(i, "\"")
        i = i + 1
        new_val = val.zfill(2)
        lst[i] = new_val
        i = i + 1
        lst.insert(i, "\"")
        i = i + 1
        j = j + 1
    elif val.startswith("+"):
        lst.insert(i, "\"")
        i = i + 1
        new_val = val[0] + "0" + val[1]
        lst[i] = (new_val)
        i = i + 1
        lst.insert(i, "\"")
        i = i + 1
        j = j + 1
    else:
        i = i + 1
        j = j + 1

print("lst = ", lst, "\n")
# ДЗ 4.
"""
4. Дан список, содержащий искажённые данные с должностями и именами
сотрудников:
['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА',
 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
Известно, что имя сотрудника всегда в конце строки. Сформировать и
вывести на экран фразы вида:
'Привет, Игорь!' Подумать, как получить имена сотрудников из элементов списка,
как привести их к корректному виду.
Можно ли при этом не создавать новый список?
"""
print("\n ДЗ 4")
lst = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА',
       'токарь высшего разряда нИКОЛАй', 'директор аэлита']
i = 0
for strg in lst:
    name1 = strg.split(" ")[-1]
    name = name1.lower()
    name = name.capitalize()
    print(f"Привет, {name}!")
# заменить имена в списке
#    lst[i] = lst[i].replace(name1,name)
#    i = i + 1
#    print(lst[i-1])

print("\n ДЗ 4a:Подумать, как получить имена сотрудников из элементов списка,")
print("как привести их к корректному виду.")
print(" Можно ли при этом не создавать новый список?")
print(" Можно в цикле list.replace(name, new_name)")
print(" Можно [print(x.split(" ")[-1].lower().capitalize()) for x in lst] \n")
# 4a Подумать, как получить имена сотрудников из элементов списка,
# как привести их к корректному виду.
# Можно ли при этом не создавать новый список?
[print(x.split(" ")[-1].lower().capitalize()) for x in lst]
"""
5. Создать список, содержащий цены на товары (10–20 товаров), например:

[57.8, 46.51, 97, ...]

    Вывести на экран эти цены через запятую в одну строку, цена должна
    отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
    Подумать, как из цены получить рубли и копейки,
    как добавить нули, если, например, получилось 7 копеек или 0 копеек
    (должно быть 07 коп или 00 коп).
    Вывести цены, отсортированные по возрастанию, новый список не создавать
    (доказать, что объект списка после сортировки остался тот же).
    Создать новый список, содержащий те же цены,
    но отсортированные по убыванию.
    Вывести цены пяти самых дорогих товаров.
    Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?
"""
print("\n ДЗ 5")
# Магазин - "По сто рублей"
prices = [57.8, 46.51, 97, 34.22, 86.04, 0.99, 34.15, 78.1, 18, 99.9, 10]

prices_dz5_2 = prices.copy()
print("prices:")
print(prices)
# prices2 = []
# for i in range(len(prices)):
#    rub = int(prices[i])
#    kop = "{:02d}".format(int(prices[i]*100%100))
#    strg = str(rub) + " руб. " + kop + " коп."
#    #print(f"{strg}")
#    prices2.append(strg)
# prices3 = ", ".join(prices2)
prices3 = ", ".join([(str(int(x)) + " руб. " +
                      "{:02d}".format(int(x*100 % 100)) +
                      " коп.") for x in prices])
print("с рублями и копейками:")
print(prices3)

print("\n ДЗ 5.1")
print("Sort prices:")
print("id до prices.sort():   ", id(prices))
prices.sort()
print("id после prices.sort():", id(prices))
print("Сортированный массив по возрастанию:")
print(prices)
print("Сортированный массив по убыванию:")
prices.sort(reverse=True)
print(prices)

print("\n ДЗ 5.1")
print("[print(x) for x in sorted(prices_dz5_2, reverse=True)[:5] ]")
[print(x) for x in sorted(prices_dz5_2, reverse=True)[:5]]
